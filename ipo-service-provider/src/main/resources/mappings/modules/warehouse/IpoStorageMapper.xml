<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yrdce.ipo.modules.warehouse.dao.IpoStorageMapper" >
  <resultMap id="BaseResultMap" type="com.yrdce.ipo.modules.warehouse.entity.IpoStorage" >
    <id column="STORAGEID" property="storageid" jdbcType="VARCHAR" />
    <result column="COMMODITYID" property="commodityid" jdbcType="VARCHAR" />
    <result column="STORAGENUM" property="storagenum" jdbcType="DECIMAL" />
    <result column="STARTNUM" property="startnum" jdbcType="VARCHAR" />
    <result column="ENDNUM" property="endnum" jdbcType="VARCHAR" />
    <result column="OPERATORID" property="operatorid" jdbcType="VARCHAR" />
    <result column="WAREHOUSEAUDITORID" property="warehouseauditorid" jdbcType="VARCHAR" />
    <result column="MARKETAUDITORID" property="marketauditorid" jdbcType="VARCHAR" />
    <result column="STORAGESTATE" property="storagestate" jdbcType="DECIMAL" />
    <result column="STORAGEDATE" property="storagedate" jdbcType="DATE" />
    <result column="WAREHOUSEID" property="warehouseid" jdbcType="VARCHAR" />
    <result column="MAPPERBILLID" property="mapperbillid" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="SResultMap" type="com.yrdce.ipo.modules.sys.entity.IpoStorageExtended" >
    <id column="STORAGEID" property="storageid" jdbcType="VARCHAR" />
    <result column="COMMODITYID" property="commodityid" jdbcType="VARCHAR" />
    <result column="STORAGENUM" property="storagenum" jdbcType="DECIMAL" />
    <result column="STARTNUM" property="startnum" jdbcType="VARCHAR" />
    <result column="ENDNUM" property="endnum" jdbcType="VARCHAR" />
    <result column="OPERATORID" property="operatorid" jdbcType="VARCHAR" />
    <result column="WAREHOUSEAUDITORID" property="warehouseauditorid" jdbcType="VARCHAR" />
    <result column="MARKETAUDITORID" property="marketauditorid" jdbcType="VARCHAR" />
    <result column="STORAGESTATE" property="storagestate" jdbcType="DECIMAL" />
    <result column="STORAGEDATE" property="storagedate" jdbcType="DATE" />
    <result column="WAREHOUSEID" property="warehouseid" jdbcType="VARCHAR" />
    <result column="MAPPERBILLID" property="mapperbillid" jdbcType="VARCHAR" />
    <result column="STORAGECOUNTS" property="storagecounts" jdbcType="DECIMAL" />
    <result column="COMMODITYNAME" property="commodityname" jdbcType="VARCHAR" />
    <result column="PUBMEMBERID" property="pubmemberid" jdbcType="VARCHAR" />
    <result column="PUBLISHERNAME" property="publishername" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_My" >
    STORAGEID, COMMODITYID, STORAGENUM, STARTNUM, ENDNUM, OPERATORID, WAREHOUSEAUDITORID, 
    MARKETAUDITORID, STORAGESTATE, STORAGEDATE, WAREHOUSEID, MAPPERBILLID
  </sql>
  
  <sql id="Base_Column_List" >
     STORAGEID, COMMODITYID, STORAGENUM, 
      STARTNUM, ENDNUM, OPERATORID, 
      WAREHOUSEAUDITORID, MARKETAUDITORID, STORAGESTATE, 
      STORAGEDATE, WAREHOUSEID, MAPPERBILLID,STORAGECOUNTS
  </sql>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from IPO_STORAGE
    where STORAGEID = #{storageid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.yrdce.ipo.modules.warehouse.entity.IpoStorage" >
    insert into IPO_STORAGE (
    <include refid="Base_Column_My" />
      )
    values (#{storageid,jdbcType=VARCHAR}, #{commodityid,jdbcType=VARCHAR}, #{storagenum,jdbcType=DECIMAL}, 
      #{startnum,jdbcType=VARCHAR}, #{endnum,jdbcType=VARCHAR}, #{operatorid,jdbcType=VARCHAR}, 
      #{warehouseauditorid,jdbcType=VARCHAR}, #{marketauditorid,jdbcType=VARCHAR}, #{storagestate,jdbcType=DECIMAL}, 
      #{storagedate,jdbcType=DATE}, #{warehouseid,jdbcType=VARCHAR}, #{mapperbillid,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.yrdce.ipo.modules.warehouse.entity.IpoStorage" >
    update IPO_STORAGE
    set COMMODITYID = #{commodityid,jdbcType=VARCHAR},
      STORAGENUM = #{storagenum,jdbcType=DECIMAL},
      STARTNUM = #{startnum,jdbcType=VARCHAR},
      ENDNUM = #{endnum,jdbcType=VARCHAR},
      OPERATORID = #{operatorid,jdbcType=VARCHAR},
      WAREHOUSEAUDITORID = #{warehouseauditorid,jdbcType=VARCHAR},
      MARKETAUDITORID = #{marketauditorid,jdbcType=VARCHAR},
      STORAGESTATE = #{storagestate,jdbcType=DECIMAL},
      STORAGEDATE = #{storagedate,jdbcType=DATE},
      WAREHOUSEID = #{warehouseid,jdbcType=VARCHAR},
      MAPPERBILLID = #{mapperbillid,jdbcType=VARCHAR}
    where STORAGEID = #{storageid,jdbcType=VARCHAR}
  </update>
  
  <update id="updateStorage" parameterType="map">
    update IPO_STORAGE
    set MARKETAUDITORID = #{checker,jdbcType=VARCHAR},
      STORAGESTATE = #{state,jdbcType=DECIMAL}
    where STORAGEID = #{storageid,jdbcType=VARCHAR}
  </update>
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_My" />
    from IPO_STORAGE
    where STORAGEID = #{storageid,jdbcType=VARCHAR}
  </select>
  
   <select id="selectByCommodityId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_My" />
    from IPO_STORAGE
    where COMMODITYID = #{commodityid,jdbcType=VARCHAR}
  </select>
  
   <select id="selectByStorageDate" resultMap="BaseResultMap" parameterType="java.util.Date" >
    select
    <include refid="Base_Column_My" />
    from IPO_STORAGE
    where STORAGEDATE = #{storagedate,jdbcType=DATE}
  </select>
  
   <select id="selectByStorageState" resultMap="BaseResultMap" parameterType="int" >
    select
    <include refid="Base_Column_My" />
    from IPO_STORAGE
    where STORAGESTATE = #{storagestate,jdbcType=INTEGER}
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_My" />
    from IPO_STORAGE
  </select>
  
  
  <select id="queryUnionByPage" resultType="com.yrdce.ipo.modules.warehouse.entity.StorageUnion" parameterType="map">
  
  SELECT D.STORAGEID, D.COMMODITYID, D.COMMODITYNAME,D.BROKERID,D.NAME,D.STORAGENUM,D.OPERATORID,D.WAREHOUSEAUDITORID,
  D.MARKETAUDITORID,D.STORAGESTATE,D.STORAGEDATE FROM (
  SELECT A.STORAGEID, A.COMMODITYID, A.COMMODITYNAME,A.BROKERID,A.NAME,A.STORAGENUM,A.OPERATORID,A.WAREHOUSEAUDITORID,
  A.MARKETAUDITORID,A.STORAGESTATE,A.STORAGEDATE, ROWNUM RN FROM(
  SELECT s.STORAGEID, s.COMMODITYID, c.COMMODITYNAME,b.BROKERID,b.NAME,s.STORAGENUM,s.OPERATORID,s.WAREHOUSEAUDITORID,
  s.MARKETAUDITORID,s.STORAGESTATE,s.STORAGEDATE FROM IPO_STORAGE s, BR_BROKER b,IPO_COMMODITY_CONF c
  WHERE s.COMMODITYID = c.COMMODITYID and c.PUBMEMBERID = b.brokerid
  <if test="storageUnion.storageid != null and storageUnion.storageid !='' ">
       and s.STORAGEID like concat (#{storageUnion.storageid,jdbcType=VARCHAR},'%')
  </if>
  <if test="storageUnion.commodityid != null and storageUnion.commodityid !='' " >
       and s.COMMODITYID like concat (#{storageUnion.commodityid,jdbcType=VARCHAR},'%')
  </if>
  <if test="storageUnion.storagestate != null" >
       and s.STORAGESTATE = #{storageUnion.storagestate,jdbcType=INTEGER} 
  </if>
  )A
  )D
  WHERE RN BETWEEN #{beginnum,jdbcType=INTEGER} and  #{endnum,jdbcType=INTEGER}

  </select>
  
  <select id="countStorage" resultType="int">
  SELECT COUNT(*) FROM (
  SELECT s.STORAGEID, s.COMMODITYID, c.COMMODITYNAME,b.BROKERID,b.NAME,s.STORAGENUM,s.OPERATORID,s.WAREHOUSEAUDITORID,
  s.MARKETAUDITORID,s.STORAGESTATE,s.STORAGEDATE FROM IPO_STORAGE s, BR_BROKER b,IPO_COMMODITY_CONF c
  WHERE s.COMMODITYID = c.COMMODITYID and c.PUBMEMBERID = b.brokerid
  )
  </select>
  
   <select id="selectUnionById" parameterType="String"  resultType="com.yrdce.ipo.modules.warehouse.entity.StorageUnion">
  SELECT s.STORAGEID, s.COMMODITYID, c.COMMODITYNAME,b.BROKERID,b.NAME,s.STORAGENUM,s.OPERATORID,s.WAREHOUSEAUDITORID,
  s.MARKETAUDITORID,s.STORAGESTATE,s.STORAGEDATE FROM IPO_STORAGE s, BR_BROKER b,IPO_COMMODITY_CONF c
  WHERE s.COMMODITYID = c.COMMODITYID and c.PUBMEMBERID = b.brokerid and s.STORAGEID = #{storageUnion.storageid,jdbcType=VARCHAR}
  </select>
  
  
  <select id="findStoragesByPage" resultMap="SResultMap" parameterType="map">
   select p.* from (select g.*,rownum TNO from (select a.*, b.name publishername
    from (select t.*, c.commodityname, c.pubmemberid from ipo_storage t  left join ipo_commodity_conf c
    on t.commodityid = c.commodityid) a left join br_broker b
    on a.pubmemberid = b.brokerid order by a.storageid) g where 1=1
       <if test="record.storageid != null" >
       and g.STORAGEID like concat (#{record.storageid,jdbcType=VARCHAR},'%')
      </if>
       <if test="record.commodityid != null" >
       and g.COMMODITYID like concat (#{record.commodityid,jdbcType=VARCHAR},'%')
      </if>
       <if test="record.storagedate != null" >
       and g.STORAGEDATE = #{record.storagedate,jdbcType=DATE}
      </if>
      <if test="record.storagestate != null" >
       and g.STORAGESTATE = #{record.storagestate,jdbcType=DECIMAL}
      </if>
    order by g.STORAGEID)  p where p.TNO between  #{beginnum} and #{endnum}
  </select>
   <select id="getTotalNum" resultType="java.lang.Integer" parameterType="com.yrdce.ipo.modules.sys.entity.IpoStorageExtended">
   	 select count(*) from IPO_STORAGE where 1=1
   	    <if test="storageid != null" >
       and STORAGEID like  concat (#{storageid,jdbcType=VARCHAR},'%')
      </if>
       <if test="commodityid != null" >
       and COMMODITYID like concat (#{commodityid,jdbcType=VARCHAR},'%')
      </if>
       <if test="storagedate != null" >
       and STORAGEDATE = #{storagedate,jdbcType=DATE}
      </if>
      <if test="storagestate != null" >
       and STORAGESTATE = #{storagestate,jdbcType=DECIMAL}
      </if>
  </select>
  
</mapper>