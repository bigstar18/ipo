<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yrdce.ipo.modules.sys.dao.IpoCommodityMapper" >
  <resultMap id="BaseResultMap" type="com.yrdce.ipo.modules.sys.entity.IpoCommodity" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="COMMODITYID" property="commodityid" jdbcType="VARCHAR" />
    <result column="COMMODITYNAME" property="commodityname" jdbcType="VARCHAR" />
    <result column="PRICE" property="price" jdbcType="DECIMAL" />
    <result column="UNITS" property="units" jdbcType="INTEGER" />
    <result column="COUNTS" property="counts" jdbcType="INTEGER" />
    <result column="STARTTIME" property="starttime" jdbcType="DATE" />
    <result column="ENDTIME" property="endtime" jdbcType="DATE" />
    <result column="PURCHASECREDITS" property="purchaseCredits" jdbcType="BIGINT"/>
    <result column="STATUS" property="status" jdbcType="INTEGER"/>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, COMMODITYID, COMMODITYNAME, PRICE, UNITS, COUNTS, STARTTIME, ENDTIME, PURCHASECREDITS,STATUS
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yrdce.ipo.modules.sys.entity.IpoCommodityExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from IPO_COMMODITY_SALE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from IPO_COMMODITY_SALE
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from IPO_COMMODITY_SALE
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yrdce.ipo.modules.sys.entity.IpoCommodityExample" >
    delete from IPO_COMMODITY_SALE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.yrdce.ipo.modules.sys.entity.IpoCommodity" >
    <selectKey resultType="Integer" order="BEFORE" keyProperty="id">

	SELECT SEQ_IPO_COMMODITY_SALE.NEXTVAL FROM dual

	</selectKey>
    insert into IPO_COMMODITY_SALE (
    <include refid="Base_Column_List" />
    ) values (#{id,jdbcType=INTEGER}, #{commodityid,jdbcType=VARCHAR}, #{commodityname,jdbcType=VARCHAR}, 
      #{price,jdbcType=DECIMAL}, #{units,jdbcType=INTEGER}, #{counts,jdbcType=INTEGER}, 
      #{starttime,jdbcType=DATE}, #{endtime,jdbcType=DATE},#{purchaseCredits,jdbcType=BIGINT},#{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.yrdce.ipo.modules.sys.entity.IpoCommodity" >
    <selectKey resultType="Integer" order="BEFORE" keyProperty="id">

	SELECT SEQ_IPO_COMMODITY_SALE.NEXTVAL FROM dual

	</selectKey>
    insert into IPO_COMMODITY_SALE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="commodityid != null" >
        COMMODITYID,
      </if>
      <if test="commodityname != null" >
        COMMODITYNAME,
      </if>
      <if test="price != null" >
        PRICE,
      </if>
      <if test="units != null" >
        UNITS,
      </if>
      <if test="counts != null" >
        COUNTS,
      </if>
      <if test="starttime != null" >
        STARTTIME,
      </if>
      <if test="endtime != null" >
        ENDTIME,
      </if>
      <if test="purchaseCredits != null">
      	PURCHASECREDITS,
      </if>
      <if test="status != null">
      	STATUS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="commodityid != null" >
        #{commodityid,jdbcType=VARCHAR},
      </if>
      <if test="commodityname != null" >
        #{commodityname,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="units != null" >
        #{units,jdbcType=INTEGER},
      </if>
      <if test="counts != null" >
        #{counts,jdbcType=INTEGER},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=DATE},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=DATE},
      </if>
      <if test="purchaseCredits != null">
      	#{purchaseCredits,jdbcType=BIGINT},
      </if>
      <if test="status != null">
      	#{status,jdbcType=INNTEGER}
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yrdce.ipo.modules.sys.entity.IpoCommodityExample" resultType="java.lang.Integer" >
    select count(*) from IPO_COMMODITY_SALE where ENDTIME >=trunc(sysdate)
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update IPO_COMMODITY_SALE
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.commodityid != null" >
        COMMODITYID = #{record.commodityid,jdbcType=VARCHAR},
      </if>
      <if test="record.commodityname != null" >
        COMMODITYNAME = #{record.commodityname,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        PRICE = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.units != null" >
        UNITS = #{record.units,jdbcType=INTEGER},
      </if>
      <if test="record.counts != null" >
        COUNTS = #{record.counts,jdbcType=INTEGER},
      </if>
      <if test="record.starttime != null" >
        STARTTIME = #{record.starttime,jdbcType=DATE},
      </if>
      <if test="record.endtime != null" >
        ENDTIME = #{record.endtime,jdbcType=DATE},
      </if>
      <if test="record.purchaseCredits != null">
      	PURCHASECREDITS = #{record.purchaseCredits,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
      	STATUS = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update IPO_COMMODITY_SALE
    set ID = #{record.id,jdbcType=INTEGER},
      COMMODITYID = #{record.commodityid,jdbcType=VARCHAR},
      COMMODITYNAME = #{record.commodityname,jdbcType=VARCHAR},
      PRICE = #{record.price,jdbcType=DECIMAL},
      UNITS = #{record.units,jdbcType=INTEGER},
      COUNTS = #{record.counts,jdbcType=INTEGER},
      STARTTIME = #{record.starttime,jdbcType=DATE},
      ENDTIME = #{record.endtime,jdbcType=DATE},
      PURCHASECREDITS = #{purchaseCredits,jdbcType=BIGINT},
      STATUS =#{status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yrdce.ipo.modules.sys.entity.IpoCommodity" >
    update IPO_COMMODITY_SALE
    <set >
      <if test="commodityid != null" >
        COMMODITYID = #{commodityid,jdbcType=VARCHAR},
      </if>
      <if test="commodityname != null" >
        COMMODITYNAME = #{commodityname,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        PRICE = #{price,jdbcType=DECIMAL},
      </if>
      <if test="units != null" >
        UNITS = #{units,jdbcType=INTEGER},
      </if>
      <if test="counts != null" >
        COUNTS = #{counts,jdbcType=INTEGER},
      </if>
      <if test="starttime != null" >
        STARTTIME = #{starttime,jdbcType=DATE},
      </if>
      <if test="endtime != null" >
        ENDTIME = #{endtime,jdbcType=DATE},
      </if>
      <if test="purchaseCredits!= null">
      	PURCHASECREDITS = #{purchaseCredits,jdbcType=BIGINT},
      </if>
      <if test="status != null">
      	STATUS = #{status,jdbcType=INTEGER}
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
   <select id="queryByConditionsfront" resultMap="BaseResultMap"  parameterType="map" >
   	 select <include refid="Base_Column_List" /> 
   	 from (select <include refid="Base_Column_List" />,rownum TNO from IPO_COMMODITY_SALE t  where t.ENDTIME >=trunc(sysdate) 
   	   <if test="record.commodityid != null" >
       and t.COMMODITYID like #{record.commodityid,jdbcType=VARCHAR} 
      </if>
      <if test="record.commodityname != null" >
       and t.COMMODITYNAME like #{record.commodityname,jdbcType=VARCHAR}
      </if>
   	  order by t.ID) a where a.TNO between  #{beginnum} and  #{endnum}
  </select>
   <select id="queryByConditions" resultMap="BaseResultMap"  parameterType="map" >
   	 select <include refid="Base_Column_List" /> 
   	 from (select <include refid="Base_Column_List" />,rownum TNO from IPO_COMMODITY_SALE t  where 1=1 
   	   <if test="record.commodityid != null" >
       and t.COMMODITYID = #{record.commodityid,jdbcType=VARCHAR} 
      </if>
      <if test="record.commodityname != null" >
       and t.COMMODITYNAME like #{record.commodityname,jdbcType=VARCHAR}
      </if>
      <if test="record.starttime != null" >
      and  t.STARTTIME = #{record.starttime,jdbcType=DATE}
      </if>
      <if test="record.endtime != null" >
      and  t.ENDTIME = #{record.endtime,jdbcType=DATE}
      </if>
      <if test="record.status != 4">
      and	t.STATUS = #{record.status,jdbcType=INTEGER}
      </if>
   	  order by t.ID) a where a.TNO between  #{beginnum} and  #{endnum}
  </select>
  
   <select id="countByConditions" resultType="Integer"  parameterType="com.yrdce.ipo.modules.sys.entity.IpoCommodity" >
   	 select count(*) from IPO_COMMODITY_SALE t where 1=1
   	   <if test="commodityid != null" >
      and  t.COMMODITYID = #{commodityid,jdbcType=VARCHAR}
      </if>
      <if test="commodityname != null" >
      and t.COMMODITYNAME like #{commodityname,jdbcType=VARCHAR}
      </if>
      <if test="starttime != null" >
      and t.STARTTIME = #{starttime,jdbcType=DATE}
      </if>
      <if test="endtime != null" >
      and  t.ENDTIME = #{endtime,jdbcType=DATE}
      </if>
      <if test="status != 0">
      and t.STATUS = #{status,jdbcType=INTEGER}
      </if>
  </select>
   <select id="countByConditionsfront" resultType="Integer"  parameterType="com.yrdce.ipo.modules.sys.entity.IpoCommodity" >
   	 select count(*) from IPO_COMMODITY_SALE t where  t.ENDTIME >=trunc(sysdate)
   	   <if test="commodityid != null" >
      and  t.COMMODITYID like #{commodityid,jdbcType=VARCHAR}
      </if>
      <if test="commodityname != null" >
      and t.COMMODITYNAME like #{commodityname,jdbcType=VARCHAR}
      </if>
  </select>
  
  
  <update id="updateByPrimaryKey" parameterType="com.yrdce.ipo.modules.sys.entity.IpoCommodity" >
    update IPO_COMMODITY_SALE
    set COMMODITYID = #{commodityid,jdbcType=VARCHAR},
      COMMODITYNAME = #{commodityname,jdbcType=VARCHAR},
      PRICE = #{price,jdbcType=DECIMAL},
      UNITS = #{units,jdbcType=INTEGER},
      COUNTS = #{counts,jdbcType=INTEGER},
      STARTTIME = #{starttime,jdbcType=DATE},
      ENDTIME = #{endtime,jdbcType=DATE},
      PURCHASECREDITS = #{purchaseCredits,jdbcType=BIGINT},
      STATUS = #{status,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="getAllByPage"  resultMap="BaseResultMap"  parameterType="map" >
  select <include refid="Base_Column_List" /> from (select <include refid="Base_Column_List" />,rownum TNO from IPO_COMMODITY_SALE t  where t.ENDTIME >=trunc(sysdate) order by t.ID) a where a.TNO between  #{beginnum} and  #{endnum}
  </select>
  <select id="selectAll"  resultMap="BaseResultMap"  >
    select 
     <include refid="Base_Column_List" />
     from IPO_COMMODITY_SALE order by COMMODITYID
  </select>
   <select id="selectByComid"  resultMap="BaseResultMap"  parameterType="map" >
    select 
     <include refid="Base_Column_List" />
    from  IPO_COMMODITY_SALE  where UPPER(COMMODITYID) = #{comid,jdbcType=VARCHAR} and ENDTIME >=trunc(sysdate)
  </select>
  
  <select id="selectByTime" resultMap="BaseResultMap" parameterType="java.lang.String">
   	select 
   		<include refid="Base_Column_List" /> 
   	from IPO_COMMODITY_SALE where to_char(STARTTIME,'yyyy-MM-dd') = #{satrttime,jdbcType=VARCHAR}  order by ID
   </select>
   
   <select id="selectByEnd" resultMap="BaseResultMap" parameterType="java.lang.String">
   	select 
   		<include refid="Base_Column_List" /> 
   	from IPO_COMMODITY_SALE where to_char(ENDTIME,'yyyy-MM-dd') = #{endtime,jdbcType=VARCHAR}  order by ID
   </select>
   
   <select id="getAll"  resultMap="BaseResultMap"  parameterType="map" >
  select <include refid="Base_Column_List" /> from (select <include refid="Base_Column_List" />,rownum TNO from IPO_COMMODITY_SALE t  order by t.ID) a where a.TNO between  #{beginnum} and  #{endnum}
  </select>
   
   <select id="selectByCommodityAndOrder" resultType = "com.yrdce.ipo.modules.sys.entity.IpoCommodityExtended" parameterType="map">
   	select b.* from
	(select a.*,rownum TNO from 
	(select c.id,c.commodityid,c.commodityname,c.starttime,c.endtime,c.counts,c.status,t1.ccounts from IPO_COMMODITY_SALE c 
	left outer join 
	(select commodityid,sum(counts) ccounts from IPO_ORDER t group by t.commodityid) t1
	on c.commodityid = t1.commodityid) a order by a.ID) b
	where b.TNO between #{beginnum} and  #{endnum}
   </select>
   <select id="getCounts" resultType="java.lang.Integer">
   	select count(0) from IPO_COMMODITY_SALE
   </select>
   
   <select id="getCountsByPage" resultType="java.lang.Integer" parameterType="java.lang.String">
   	select count(0) from IPO_COMMODITY_SALE where upper(COMMODITYID) like concat(concat('%',#{commodityid,jdbcType=VARCHAR}),'%')
   </select>
   
   <update id="updateByStatus" parameterType="map">
   	update IPO_COMMODITY_SALE set STATUS = #{status,jdbcType=INTEGER} where COMMODITYID = #{commodityid,jdbcType=VARCHAR}
   </update>
    <update id="update" parameterType="com.yrdce.ipo.modules.sys.entity.IpoCommodity">
   	update IPO_COMMODITY_SALE set 
      COMMODITYNAME = #{commodityname,jdbcType=VARCHAR},
      PRICE = #{price,jdbcType=DECIMAL},
      UNITS = #{units,jdbcType=INTEGER},
      COUNTS = #{counts,jdbcType=INTEGER},
      STARTTIME = #{starttime,jdbcType=DATE},
      ENDTIME = #{endtime,jdbcType=DATE},
      PURCHASECREDITS = #{purchaseCredits,jdbcType=BIGINT},
      STATUS = #{status,jdbcType=INTEGER}
      where  COMMODITYID  = #{commodityid,jdbcType=VARCHAR}
   </update>
   <select id="getAllBycommodityid"  resultType = "com.yrdce.ipo.modules.sys.entity.IpoCommodityExtended"  parameterType="map" >
  select b.* from
	(select a.*,rownum TNO from 
	(select c.id,c.commodityid,c.starttime,c.endtime,c.counts,c.status,t1.ccounts from IPO_COMMODITY_SALE c 
	left outer join 
	(select commodityid,sum(counts) ccounts from IPO_ORDER t group by t.commodityid) t1
	on c.commodityid = t1.commodityid where upper(c.commodityid) like concat(concat('%',#{commodityid,jdbcType=VARCHAR}),'%')) a order by a.ID) b
	where b.TNO between #{beginnum} and  #{endnum}
  </select>
  
  <select id="selectByCommodityid" resultType = "java.lang.Integer" parameterType="java.lang.String">
  	select UNITS from IPO_COMMODITY_SALE where  COMMODITYID  = #{commodityid,jdbcType=VARCHAR}
  </select>
</mapper>
