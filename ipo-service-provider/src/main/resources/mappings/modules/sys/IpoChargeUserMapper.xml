<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yrdce.ipo.modules.sys.dao.IpoChargeUserMapper" >
  
  <resultMap id="IpoChargeUserResultMap" type="com.yrdce.ipo.modules.sys.entity.IpoChargeUser" >
    <result column="id" property="id"  />
    <result column="business_code" property="businessCode"  />
    <result column="role_code" property="roleCode"  />
    <result column="user_id" property="userId"  />
    <result column="charge_pattern" property="chargePattern"  />
    <result column="amount" property="amount"  />
    <result column="charge_id" property="chargeId"  />
    <result column="charge_name" property="chargeName"  />
    <result column="parent_id" property="chargeParentId"  />
    <result column="parent_name" property="chargeParentName"  />
    <result column="create_date" property="createDate"  />
    <result column="create_user" property="createUser"  />
    <result column="create_user_name" property="createUserName"  />
    <result column="update_date" property="updateDate"  />
    <result column="update_user" property="updateUser"  />
    <result column="update_user_name" property="updateUserName"  />
  </resultMap>
   
  <select id="queryForPage" resultMap="IpoChargeUserResultMap"  parameterType="map" >
       select * from (
	          select pg.*,rownum as row_num from (
				   select r.id, r.business_code, r.role_code,  r.charge_pattern, r.amount,r.user_id,
				           r.charge_id,c.name as  charge_name, p.id as parent_id,p.name as parent_name
				   from ipo_charge_user r
				   left join ipo_charge_item c on (r.charge_id=c.id)
				   left join ipo_charge_item p on (c.parent_id=p.id)
				   where r.delete_flag=0
				  <if test="param.chargeName!=null and param.chargeName!='' ">
			        and c.name like '%'||#{param.chargeName}||'%' 
		          </if>
			) pg where  #{endIndex} >=rownum
		) where row_num>=#{startIndex}
  </select>
  
  <select id="queryForCount" resultType="java.lang.Long"    parameterType="map" >
        select  count(r.id) as count_
	    from ipo_charge_user r
	    left join ipo_charge_item c on (r.charge_id=c.id)
	    left join ipo_charge_item p on (c.parent_id=p.id)
	    where r.delete_flag=0
	   <if test="param.chargeName!=null and param.chargeName!='' ">
		and c.name like '%'||#{param.chargeName}||'%' 
	   </if>
      
  </select>
  
  
  <insert id="insert" parameterType="com.yrdce.ipo.modules.sys.vo.ChargeRole" >
     <selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="id">
		select seq_ipo_charge_user.nextval from dual
	 </selectKey>
    insert into ipo_charge_user (id, business_code, role_code, charge_id,user_id, charge_pattern, amount,create_user,create_date)
    values  ( #{id},#{businessCode},#{roleCode},#{chargeId},#{userId},#{chargePattern},#{amount},#{createUser},#{createDate,jdbcType=TIMESTAMP} )
    
  </insert>
  

  <select id="findById" resultMap="IpoChargeUserResultMap"  parameterType="java.lang.Long" >
     select id, business_code, role_code, charge_id,user_id, charge_pattern, amount from ipo_charge_user where id=#{id}
  </select>
  
  <update id="update" parameterType="map" >
     update ipo_charge_user set   business_code = #{param.businessCode},
           role_code = #{param.roleCode}, charge_id = #{param.chargeId},
           user_id=#{param.userId},
           charge_pattern = #{param.chargePattern},amount = #{param.amount},
           update_user=#{param.updateUser},update_date=#{param.updateDate,jdbcType=TIMESTAMP}
     where id = #{param.id}
  </update>
  
  
  
  
</mapper>