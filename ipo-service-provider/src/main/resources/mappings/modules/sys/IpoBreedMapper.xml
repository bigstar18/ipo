<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yrdce.ipo.modules.sys.dao.IpoBreedMapper" >
  <resultMap id="BaseResultMap" type="com.yrdce.ipo.modules.sys.entity.IpoBreed" >
    <id column="BREEDID" property="breedid" jdbcType="DECIMAL" />
    <result column="BREEDNAME" property="breedname" jdbcType="VARCHAR" />
    <result column="SORTID" property="sortid" jdbcType="DECIMAL" />
    <result column="CONTRACTFACTOR" property="contractfactor" jdbcType="DECIMAL" />
    <result column="MINPRICEMOVE" property="minpricemove" jdbcType="DECIMAL" />
    <result column="SPREADALGR" property="spreadalgr" jdbcType="DECIMAL" />
    <result column="SPREADUPLMT" property="spreaduplmt" jdbcType="DECIMAL" />
    <result column="SPREADDOWNLMT" property="spreaddownlmt" jdbcType="DECIMAL" />
    <result column="MINQUANTITYMOVE" property="minquantitymove" jdbcType="DECIMAL" />
    <result column="CONTRACTFACTORNAME" property="contractfactorname" jdbcType="VARCHAR" />
    <result column="MINAPPLYNUM" property="minapplynum" jdbcType="DECIMAL" />
    <result column="MAXAPPLYNUM" property="maxapplynum" jdbcType="DECIMAL" />
    <result column="MINAPPLYQUAMOVE" property="minapplyquamove" jdbcType="DECIMAL" />
    <result column="PUBLISHALGR" property="publishalgr" jdbcType="DECIMAL" />
    <result column="DEALERPUBCHARATIO" property="dealerpubcharatio" jdbcType="DECIMAL" />
    <result column="MKTDEAPUBCHARATIO" property="mktdeapubcharatio" jdbcType="DECIMAL" />
    <result column="PUBLISHERCHARATIO" property="publishercharatio" jdbcType="DECIMAL" />
    <result column="MKTPUBCHARATIO" property="mktpubcharatio" jdbcType="DECIMAL" />
    <result column="CONTRACTCURRENCY" property="contractcurrency" jdbcType="VARCHAR" />
    <result column="TRADEDAYS" property="tradedays" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    BREEDID, BREEDNAME, SORTID, CONTRACTFACTOR, MINPRICEMOVE, SPREADALGR, SPREADUPLMT, 
    SPREADDOWNLMT, MINQUANTITYMOVE, CONTRACTFACTORNAME, MINAPPLYNUM, MAXAPPLYNUM, MINAPPLYQUAMOVE, 
    PUBLISHALGR, DEALERPUBCHARATIO, MKTDEAPUBCHARATIO, PUBLISHERCHARATIO, MKTPUBCHARATIO, 
    CONTRACTCURRENCY, TRADEDAYS
  </sql>
  <delete id="deleteByExample" parameterType="com.yrdce.ipo.modules.sys.entity.IpoBreedExample" >
    delete from IPO_BREED
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yrdce.ipo.modules.sys.entity.IpoBreed" >
    insert into IPO_BREED (BREEDID, BREEDNAME, SORTID, 
      CONTRACTFACTOR, MINPRICEMOVE, SPREADALGR, 
      SPREADUPLMT, SPREADDOWNLMT, MINQUANTITYMOVE, 
      CONTRACTFACTORNAME, MINAPPLYNUM, MAXAPPLYNUM, 
      MINAPPLYQUAMOVE, PUBLISHALGR, DEALERPUBCHARATIO, 
      MKTDEAPUBCHARATIO, PUBLISHERCHARATIO, MKTPUBCHARATIO, 
      CONTRACTCURRENCY, TRADEDAYS)
    values (#{breedid,jdbcType=DECIMAL}, #{breedname,jdbcType=VARCHAR}, #{sortid,jdbcType=DECIMAL}, 
      #{contractfactor,jdbcType=DECIMAL}, #{minpricemove,jdbcType=DECIMAL}, #{spreadalgr,jdbcType=DECIMAL}, 
      #{spreaduplmt,jdbcType=DECIMAL}, #{spreaddownlmt,jdbcType=DECIMAL}, #{minquantitymove,jdbcType=DECIMAL}, 
      #{contractfactorname,jdbcType=VARCHAR}, #{minapplynum,jdbcType=DECIMAL}, #{maxapplynum,jdbcType=DECIMAL}, 
      #{minapplyquamove,jdbcType=DECIMAL}, #{publishalgr,jdbcType=DECIMAL}, #{dealerpubcharatio,jdbcType=DECIMAL}, 
      #{mktdeapubcharatio,jdbcType=DECIMAL}, #{publishercharatio,jdbcType=DECIMAL}, #{mktpubcharatio,jdbcType=DECIMAL}, 
      #{contractcurrency,jdbcType=VARCHAR}, #{tradedays,jdbcType=DECIMAL})
  </insert>
   <update id="update" parameterType="com.yrdce.ipo.modules.sys.entity.IpoBreed" >
    update IPO_BREED
    set BREEDID = #{breedid,jdbcType=DECIMAL},
      BREEDNAME = #{breedname,jdbcType=VARCHAR},
      SORTID = #{sortid,jdbcType=DECIMAL},
      CONTRACTFACTOR = #{contractfactor,jdbcType=DECIMAL},
      MINPRICEMOVE = #{minpricemove,jdbcType=DECIMAL},
      SPREADALGR = #{spreadalgr,jdbcType=DECIMAL},
      SPREADUPLMT = #{spreaduplmt,jdbcType=DECIMAL},
      SPREADDOWNLMT = #{spreaddownlmt,jdbcType=DECIMAL},
      MINQUANTITYMOVE = #{minquantitymove,jdbcType=DECIMAL},
      CONTRACTFACTORNAME = #{contractfactorname,jdbcType=VARCHAR},
      MINAPPLYNUM = #{minapplynum,jdbcType=DECIMAL},
      MAXAPPLYNUM = #{maxapplynum,jdbcType=DECIMAL},
      MINAPPLYQUAMOVE = #{minapplyquamove,jdbcType=DECIMAL},
      PUBLISHALGR = #{publishalgr,jdbcType=DECIMAL},
      DEALERPUBCHARATIO = #{dealerpubcharatio,jdbcType=DECIMAL},
      MKTDEAPUBCHARATIO = #{mktdeapubcharatio,jdbcType=DECIMAL},
      PUBLISHERCHARATIO = #{publishercharatio,jdbcType=DECIMAL},
      MKTPUBCHARATIO = #{mktpubcharatio,jdbcType=DECIMAL},
      CONTRACTCURRENCY = #{contractcurrency,jdbcType=DECIMAL},
      TRADEDAYS = #{tradedays,jdbcType=DECIMAL}
  </update>
 <select id="countAll" resultType="java.lang.Integer" >
    select count(*) from IPO_BREED
 </select>
  <select id="getAllByPage"  resultMap="BaseResultMap"  parameterType="map" >
  select <include refid="Base_Column_List" /> from (select t.*,rownum TNO from IPO_BREED t) a where a.TNO between  #{beginnum} and  #{endnum}
  </select>
    <select id="selectByBreedid"  resultMap="BaseResultMap"  parameterType="Long" >
    select 
     <include refid="Base_Column_List" />
    from  IPO_BREED  where BREEDID = #{breedid,jdbcType=DECIMAL} 
  </select> 
  <select id="getAllByName"  resultMap="BaseResultMap"  parameterType="map" >
  select <include refid="Base_Column_List" /> from (select t.*,rownum TNO from IPO_BREED t where BREEDNAME like  #{breedname}) a where a.TNO between  #{beginnum} and  #{endnum}
  </select>
   <select id="countByName" parameterType="String" resultType="java.lang.Integer" >
    select count(*) from IPO_BREED where BREEDNAME like  #{breedname}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select <include refid="Base_Column_List" /> from IPO_BREED
  </select>
</mapper>