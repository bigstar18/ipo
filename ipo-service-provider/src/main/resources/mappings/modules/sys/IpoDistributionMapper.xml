<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yrdce.ipo.modules.sys.dao.IpoDistributionMapper" >
  <resultMap id="BaseResultMap" type="com.yrdce.ipo.modules.sys.entity.IpoDistribution" >
    <id column="ID" property="id" jdbcType="NUMBER" />
    <result column="USERID" property="userid" jdbcType="VARCHAR" />
    <result column="COMMODITYNAME" property="commodityname" jdbcType="VARCHAR" />
    <result column="STARTNUMBER" property="startnumber" jdbcType="NUMBER" />
    <result column="PCOUNTS" property="pcounts" jdbcType="NUMBER" />
    <result column="PTIME" property="ptime" jdbcType="TIMESTAMP" />
    <result column="ZCOUNTS" property="zcounts" jdbcType="NUMBER" />
    <result column="COMMODITYID" property="commodityid" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yrdce.ipo.modules.sys.entity.IpoDistribution" extends="BaseResultMap" >
    <result column="NUMBERS" property="numbers" jdbcType="BLOB" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, USERID, COMMODITYNAME, STARTNUMBER, PCOUNTS, PTIME, ZCOUNTS,COMMODITYID
  </sql>
  <sql id="Blob_Column_List" >
    NUMBERS
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.yrdce.ipo.modules.sys.entity.IpoDistributionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from IPO_DISTRIBUTION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yrdce.ipo.modules.sys.entity.IpoDistributionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from IPO_DISTRIBUTION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from IPO_DISTRIBUTION
    where ID = #{id,jdbcType=NUMBER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from IPO_DISTRIBUTION
    where ID = #{id,jdbcType=NUMBER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yrdce.ipo.modules.sys.entity.IpoDistributionExample" >
    delete from IPO_DISTRIBUTION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="ID" parameterType="com.yrdce.ipo.modules.sys.entity.IpoDistribution" >
    <selectKey resultType="Integer" order="BEFORE" keyProperty="ID">

	SELECT SEQ_IPO_DISTRIBUTION.NEXTVAL FROM dual

	</selectKey>
    insert into IPO_DISTRIBUTION (ID, USERID, COMMODITYNAME, 
      STARTNUMBER, PCOUNTS, PTIME, 
      ZCOUNTS, NUMBERS,COMMODITYID)
    values (#{id,jdbcType=NUMBER}, #{userid,jdbcType=VARCHAR}, #{commodityname,jdbcType=VARCHAR}, 
      #{startnumber,jdbcType=NUMBER}, #{pcounts,jdbcType=NUMBER}, #{ptime,jdbcType=TIMESTAMP}, 
      #{zcounts,jdbcType=NUMBER}, #{numbers,jdbcType=BLOB}),#{commodityid,jdbcType=VARCHAR}
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="ID" parameterType="com.yrdce.ipo.modules.sys.entity.IpoDistribution" >
    <selectKey resultType="Integer" order="BEFORE" keyProperty="ID">

	SELECT SEQ_IPO_DISTRIBUTION.NEXTVAL FROM dual

	</selectKey>
    insert into IPO_DISTRIBUTION
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="userid != null" >
        USERID,
      </if>
      <if test="commodityname != null" >
        COMMODITYNAME,
      </if>
      <if test="startnumber != null" >
        STARTNUMBER,
      </if>
      <if test="pcounts != null" >
        PCOUNTS,
      </if>
      <if test="ptime != null" >
        PTIME,
      </if>
      <if test="zcounts != null" >
        ZCOUNTS,
      </if>
      <if test="numbers != null" >
        NUMBERS,
      </if>
      <if test="commodityid != null">
      COMMODITYID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=NUMBER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="commodityname != null" >
        #{commodityname,jdbcType=VARCHAR},
      </if>
      <if test="startnumber != null" >
        #{startnumber,jdbcType=NUMBER},
      </if>
      <if test="pcounts != null" >
        #{pcounts,jdbcType=NUMBER},
      </if>
      <if test="ptime != null" >
        #{ptime,jdbcType=TIMESTAMP},
      </if>
      <if test="zcounts != null" >
        #{zcounts,jdbcType=NUMBER},
      </if>
      <if test="numbers != null" >
        #{numbers,jdbcType=BLOB},
      </if>
      <if test="commodityid != null">
      	#{commodityid,jdbcType=VARCHAR}
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yrdce.ipo.modules.sys.entity.IpoDistributionExample" resultType="java.lang.Integer" >
    select count(*) from IPO_DISTRIBUTION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update IPO_DISTRIBUTION
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=NUMBER},
      </if>
      <if test="record.userid != null" >
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.commodityname != null" >
        COMMODITYNAME = #{record.commodityname,jdbcType=VARCHAR},
      </if>
      <if test="record.startnumber != null" >
        STARTNUMBER = #{record.startnumber,jdbcType=NUMBER},
      </if>
      <if test="record.pcounts != null" >
        PCOUNTS = #{record.pcounts,jdbcType=NUMBER},
      </if>
      <if test="record.ptime != null" >
        PTIME = #{record.ptime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.zcounts != null" >
        ZCOUNTS = #{record.zcounts,jdbcType=NUMBER},
      </if>
      <if test="record.numbers != null" >
        NUMBERS = #{record.numbers,jdbcType=BLOB},
      </if>
      <if test="record.commodity != null">
      	COMMODITY = #{RECORD.commodityid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update IPO_DISTRIBUTION
    set ID = #{record.id,jdbcType=NUMBER},
      USERID = #{record.userid,jdbcType=VARCHAR},
      COMMODITYNAME = #{record.commodityname,jdbcType=VARCHAR},
      STARTNUMBER = #{record.startnumber,jdbcType=NUMBER},
      PCOUNTS = #{record.pcounts,jdbcType=NUMBER},
      PTIME = #{record.ptime,jdbcType=TIMESTAMP},
      ZCOUNTS = #{record.zcounts,jdbcType=NUMBER},
      NUMBERS = #{record.numbers,jdbcType=BLOB},
      COMMODITY = #{record.commodityid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update IPO_DISTRIBUTION
    set ID = #{record.id,jdbcType=NUMBER},
      USERID = #{record.userid,jdbcType=VARCHAR},
      COMMODITYNAME = #{record.commodityname,jdbcType=VARCHAR},
      STARTNUMBER = #{record.startnumber,jdbcType=NUMBER},
      PCOUNTS = #{record.pcounts,jdbcType=NUMBER},
      PTIME = #{record.ptime,jdbcType=TIMESTAMP},
      ZCOUNTS = #{record.zcounts,jdbcType=NUMBER},
      COMMODITYID =#{record.commodity,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yrdce.ipo.modules.sys.entity.IpoDistribution" >
    update IPO_DISTRIBUTION
    <set >
      <if test="userid != null" >
        USERID = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="commodityname != null" >
        COMMODITYNAME = #{commodityname,jdbcType=VARCHAR},
      </if>
      <if test="startnumber != null" >
        STARTNUMBER = #{startnumber,jdbcType=NUMBER},
      </if>
      <if test="pcounts != null" >
        PCOUNTS = #{pcounts,jdbcType=NUMBER},
      </if>
      <if test="ptime != null" >
        PTIME = #{ptime,jdbcType=TIMESTAMP},
      </if>
      <if test="zcounts != null" >
        ZCOUNTS = #{zcounts,jdbcType=NUMBER},
      </if>
      <if test="numbers != null" >
        NUMBERS = #{numbers,jdbcType=BLOB},
      </if>
      <if test="commodityid != null">
      	COMMODITYID = #{commodityid,jdbcType=NUMBER},
      </if>
    </set>
    where ID = #{id,jdbcType=NUMBER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yrdce.ipo.modules.sys.entity.IpoDistribution" >
    update IPO_DISTRIBUTION
    set USERID = #{userid,jdbcType=VARCHAR},
      COMMODITYNAME = #{commodityname,jdbcType=VARCHAR},
      STARTNUMBER = #{startnumber,jdbcType=NUMBER},
      PCOUNTS = #{pcounts,jdbcType=NUMBER},
      PTIME = #{ptime,jdbcType=TIMESTAMP},
      ZCOUNTS = #{zcounts,jdbcType=NUMBER},
      NUMBERS = #{numbers,jdbcType=BLOB},
      COMMODITYID =#{commodityid,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=NUMBER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yrdce.ipo.modules.sys.entity.IpoDistribution" >
    update IPO_DISTRIBUTION
    set USERID = #{userid,jdbcType=VARCHAR},
      COMMODITYNAME = #{commodityname,jdbcType=VARCHAR},
      STARTNUMBER = #{startnumber,jdbcType=NUMBER},
      PCOUNTS = #{pcounts,jdbcType=NUMBER},
      PTIME = #{ptime,jdbcType=TIMESTAMP},
      ZCOUNTS = #{zcounts,jdbcType=NUMBER},
      COMMODITYID =#{commodityid,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=NUMBER}
  </update>
  
  <update id="updateBycommodityid" parameterType="java.lang.Integer">
  	update IPO_DISTRIBUTION
  	set ZCOUNTS = #{zcounts,jdbcType=NUMBER},
      	NUMBERS = #{numbers,jdbcType=BLOB}
      	where COMMODITYID = #{commodityid,jdbcType=VACHAR}
  </update>
</mapper>