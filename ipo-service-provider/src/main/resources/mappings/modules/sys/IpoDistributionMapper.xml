<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yrdce.ipo.modules.sys.dao.IpoDistributionMapper" >
  <resultMap id="BaseResultMap" type="com.yrdce.ipo.modules.sys.entity.IpoDistribution" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="userid" property="userid" jdbcType="VARCHAR" />
    <result column="commodityname" property="commodityname" jdbcType="VARCHAR" />
    <result column="start_number" property="startNumber" jdbcType="DECIMAL" />
    <result column="distribution_quantity" property="distributionQuantity" jdbcType="DECIMAL" />
    <result column="distribution_time" property="distributionTime" jdbcType="DATE" />
    <result column="count" property="count" jdbcType="DECIMAL" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yrdce.ipo.modules.sys.entity.IpoDistribution" extends="BaseResultMap" >
    <result column="number" property="number" jdbcType="BLOB" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userid, commodityname, start_number, distribution_quantity, distribution_time, 
    count
  </sql>
  <sql id="Blob_Column_List" >
    number
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.yrdce.ipo.modules.sys.entity.IpoDistributionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from IPO_DISTRIBUTION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yrdce.ipo.modules.sys.entity.IpoDistributionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from IPO_DISTRIBUTION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from IPO_DISTRIBUTION
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from IPO_DISTRIBUTION
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.yrdce.ipo.modules.sys.entity.IpoDistributionExample" >
    delete from IPO_DISTRIBUTION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yrdce.ipo.modules.sys.entity.IpoDistribution" >
    insert into IPO_DISTRIBUTION (id, userid, commodityname, 
      start_number, distribution_quantity, distribution_time, 
      count, number)
    values (#{id,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, #{commodityname,jdbcType=VARCHAR}, 
      #{startNumber,jdbcType=DECIMAL}, #{distributionQuantity,jdbcType=DECIMAL}, #{distributionTime,jdbcType=DATE}, 
      #{count,jdbcType=DECIMAL}, #{number,jdbcType=BLOB})
  </insert>
  <insert id="insertSelective" parameterType="com.yrdce.ipo.modules.sys.entity.IpoDistribution" >
    insert into IPO_DISTRIBUTION
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="commodityname != null" >
        commodityname,
      </if>
      <if test="startNumber != null" >
        start_number,
      </if>
      <if test="distributionQuantity != null" >
        distribution_quantity,
      </if>
      <if test="distributionTime != null" >
        distribution_time,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="number != null" >
        number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="commodityname != null" >
        #{commodityname,jdbcType=VARCHAR},
      </if>
      <if test="startNumber != null" >
        #{startNumber,jdbcType=DECIMAL},
      </if>
      <if test="distributionQuantity != null" >
        #{distributionQuantity,jdbcType=DECIMAL},
      </if>
      <if test="distributionTime != null" >
        #{distributionTime,jdbcType=DATE},
      </if>
      <if test="count != null" >
        #{count,jdbcType=DECIMAL},
      </if>
      <if test="number != null" >
        #{number,jdbcType=BLOB},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yrdce.ipo.modules.sys.entity.IpoDistributionExample" resultType="java.lang.Integer" >
    select count(*) from IPO_DISTRIBUTION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update IPO_DISTRIBUTION
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.commodityname != null" >
        commodityname = #{record.commodityname,jdbcType=VARCHAR},
      </if>
      <if test="record.startNumber != null" >
        start_number = #{record.startNumber,jdbcType=DECIMAL},
      </if>
      <if test="record.distributionQuantity != null" >
        distribution_quantity = #{record.distributionQuantity,jdbcType=DECIMAL},
      </if>
      <if test="record.distributionTime != null" >
        distribution_time = #{record.distributionTime,jdbcType=DATE},
      </if>
      <if test="record.count != null" >
        count = #{record.count,jdbcType=DECIMAL},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=BLOB},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update IPO_DISTRIBUTION
    set id = #{record.id,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=VARCHAR},
      commodityname = #{record.commodityname,jdbcType=VARCHAR},
      start_number = #{record.startNumber,jdbcType=DECIMAL},
      distribution_quantity = #{record.distributionQuantity,jdbcType=DECIMAL},
      distribution_time = #{record.distributionTime,jdbcType=DATE},
      count = #{record.count,jdbcType=DECIMAL},
      number = #{record.number,jdbcType=BLOB}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update IPO_DISTRIBUTION
    set id = #{record.id,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=VARCHAR},
      commodityname = #{record.commodityname,jdbcType=VARCHAR},
      start_number = #{record.startNumber,jdbcType=DECIMAL},
      distribution_quantity = #{record.distributionQuantity,jdbcType=DECIMAL},
      distribution_time = #{record.distributionTime,jdbcType=DATE},
      count = #{record.count,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yrdce.ipo.modules.sys.entity.IpoDistribution" >
    update IPO_DISTRIBUTION
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="commodityname != null" >
        commodityname = #{commodityname,jdbcType=VARCHAR},
      </if>
      <if test="startNumber != null" >
        start_number = #{startNumber,jdbcType=DECIMAL},
      </if>
      <if test="distributionQuantity != null" >
        distribution_quantity = #{distributionQuantity,jdbcType=DECIMAL},
      </if>
      <if test="distributionTime != null" >
        distribution_time = #{distributionTime,jdbcType=DATE},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=DECIMAL},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=BLOB},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yrdce.ipo.modules.sys.entity.IpoDistribution" >
    update IPO_DISTRIBUTION
    set userid = #{userid,jdbcType=VARCHAR},
      commodityname = #{commodityname,jdbcType=VARCHAR},
      start_number = #{startNumber,jdbcType=DECIMAL},
      distribution_quantity = #{distributionQuantity,jdbcType=DECIMAL},
      distribution_time = #{distributionTime,jdbcType=DATE},
      count = #{count,jdbcType=DECIMAL},
      number = #{number,jdbcType=BLOB}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yrdce.ipo.modules.sys.entity.IpoDistribution" >
    update IPO_DISTRIBUTION
    set userid = #{userid,jdbcType=VARCHAR},
      commodityname = #{commodityname,jdbcType=VARCHAR},
      start_number = #{startNumber,jdbcType=DECIMAL},
      distribution_quantity = #{distributionQuantity,jdbcType=DECIMAL},
      distribution_time = #{distributionTime,jdbcType=DATE},
      count = #{count,jdbcType=DECIMAL}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>