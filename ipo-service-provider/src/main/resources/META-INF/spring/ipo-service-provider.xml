<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:dubbo.properties</value>
				<value>/WEB-INF/dubbo.properties</value>
				<value>file://${user.home}/dubbo.properties</value>
			</list>
		</property>
	</bean>

	<dubbo:application name="${dubbo.application.name}" owner="programmer" organization="dubbox" />
	<dubbo:protocol name="dubbo" serialization="kryo" optimizer="com.yrdce.ipo.SerializationOptimizerImpl" port="55500" />
	<!-- <dubbo:registry address="10.20.153.10:9090" register="false" /> -->
	<dubbo:registry address="${dubbo.registry.address}" />
	<dubbo:provider delay="-1" timeout="30000" retries="0" />
    <!-- here we demonstrate both annotation-based and xml-based configs -->
	<!-- <dubbo:annotation package="com.yrdce.ipo.user.facade" /> -->

    <!-- we add the group property since there's another annotation-configured service impl: com.yrdce.ipo.user.facade.AnnotationDrivenUserRestServiceImpl -->
	<dubbo:service interface="com.yrdce.ipo.modules.sys.service.CommodityService" ref="commodityService" protocol="dubbo" />
	<dubbo:service interface="com.yrdce.ipo.modules.sys.service.DisplayService" ref="displayService" protocol="dubbo" />
	<dubbo:service interface="com.yrdce.ipo.modules.sys.service.Purchase" ref="purchase" protocol="dubbo" />
	<dubbo:service interface="com.yrdce.ipo.modules.sys.service.DistributionService" ref="distributionService" protocol="dubbo" />
	<dubbo:service interface="com.yrdce.ipo.modules.sys.service.OrderService" ref="orderService" protocol="dubbo"/>
    <dubbo:service interface="com.yrdce.ipo.modules.sys.service.VIpoABreedService" ref="vIpoABreedService" protocol="dubbo"/>
    <dubbo:service interface="com.yrdce.ipo.modules.sys.service.MBreedService" ref="mBreedservice" protocol="dubbo"/>
    <dubbo:service interface="com.yrdce.ipo.modules.sys.service.TradetimeService" ref="tradetimeservice" protocol="dubbo"/>
    <dubbo:service interface="com.yrdce.ipo.modules.sys.service.IpoCommConfService" ref="ipoCommConfService" protocol="dubbo" />
    <dubbo:service interface="com.yrdce.ipo.modules.sys.service.TCommodityService" ref="tCommodityService" protocol="dubbo" />
    <dubbo:service interface="com.yrdce.ipo.modules.sys.service.BrBrokerService" ref="brBrokerService" protocol="dubbo" />
	<dubbo:service interface="com.yrdce.ipo.modules.sys.service.SystemService" ref="systemService" protocol="dubbo" />
	<dubbo:service interface="com.yrdce.ipo.modules.sys.service.LoanDepositService" ref="loanDepositService" protocol="dubbo" />
	<dubbo:service interface="com.yrdce.ipo.modules.sys.service.SpecialPoundageService" ref="specialPoundageService" protocol="dubbo" />
	<dubbo:service interface="com.yrdce.ipo.modules.sys.service.DeliveryOrderService" ref="deliveryorderservice" protocol="dubbo" />

	<bean id="commodityService" class="com.yrdce.ipo.modules.sys.service.CommodityServiceImpl" />
	<bean id="displayService" class="com.yrdce.ipo.modules.sys.service.DisplayServiceImpl" />
	<bean id="purchase" class="com.yrdce.ipo.modules.sys.service.PurchaseImpl" />
	<bean id="distributionService" class="com.yrdce.ipo.modules.sys.service.DistributionServiceImpl" />
	<bean id="orderService" class="com.yrdce.ipo.modules.sys.service.OrderServiceImpl" />
	<bean id="vIpoABreedService" class="com.yrdce.ipo.modules.sys.service.IpoABreedServiceImpl" />
	<bean id="mBreedservice" class="com.yrdce.ipo.modules.sys.service.MBreedServiceImpl" />
	<bean id="tradetimeservice" class="com.yrdce.ipo.modules.sys.service.TradetimeServiceImpl" />
	<bean id="ipoCommConfService" class="com.yrdce.ipo.modules.sys.service.CommoConfServiceImpl" />
	<bean id="tCommodityService" class="com.yrdce.ipo.modules.sys.service.TCommodityServiceImpl" />
	<bean id="brBrokerService" class="com.yrdce.ipo.modules.sys.service.BrBrokerServiceImpl" />
	<bean id="systemService" class="com.yrdce.ipo.modules.sys.service.SystemServiceImpl" />
	<bean id="loanDepositService" class="com.yrdce.ipo.modules.sys.service.LoanDepositServiceImpl"/>
	<bean id="specialPoundageService" class="com.yrdce.ipo.modules.sys.service.SpecialPoundageServiceImpl"/>
	<bean id="deliveryorderservice" class="com.yrdce.ipo.modules.sys.service.DeliveryOrderServiceImpl"/>
	<!-- 	当一个接口有多种实现时，可以用group区分。 
	从 dubbo 2.2.0 开始，每个服务默认都会在本地暴露；在引用服务的时候，默认优先引用本地服务；如果希望引用远程服务可以使用一下配置强制引用远程服务。
	读写分离：
	method = find*,list*,get*,is* => host = 172.22.3.94,172.22.3.95,172.22.3.96
	method != find*,list*,get*,is* => host = 172.22.3.97,172.22.3.98 
	-->
	<!-- <dubbo:registry address="N/A" />
	 -->
	<!-- 使用多个协议暴露服务 -->
    <!-- <dubbo:service id="helloService" interface="com.alibaba.hello.api.HelloService" version="1.0.0" protocol="dubbo,hessian" /> -->
</beans>