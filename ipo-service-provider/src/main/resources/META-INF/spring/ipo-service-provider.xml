<?xml version="1.0" encoding="UTF-8"?>
<!--
 - Copyright 1999-2011 Alibaba Group.
 -  
 - Licensed under the Apache License, Version 2.0 (the "License");
 - you may not use this file except in compliance with the License.
 - You may obtain a copy of the License at
 -  
 -      http://www.apache.org/licenses/LICENSE-2.0
 -  
 - Unless required by applicable law or agreed to in writing, software
 - distributed under the License is distributed on an "AS IS" BASIS,
 - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 - See the License for the specific language governing permissions and
 - limitations under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:dubbo.properties</value>
				<value>/WEB-INF/dubbo.properties</value>
				<value>file://${user.home}/dubbo.properties</value>
			</list>
		</property>
	</bean>
	<dubbo:application name="${dubbo.application.name}" owner="programmer" organization="dubbox" />
	<dubbo:registry address="${dubbo.registry.address}" />

    <!-- here we demonstrate both annotation-based and xml-based configs -->
	<!-- <dubbo:annotation package="com.yrdce.ipo.user.facade" /> -->

	<dubbo:protocol name="dubbo" serialization="kryo" optimizer="com.yrdce.ipo.SerializationOptimizerImpl" port="55500" />


    <!-- we add the group property since there's another annotation-configured service impl: com.yrdce.ipo.user.facade.AnnotationDrivenUserRestServiceImpl -->
	<dubbo:service interface="com.yrdce.ipo.modules.sys.service.CommodityService" ref="commodityService" protocol="dubbo" />
	<dubbo:service interface="com.yrdce.ipo.modules.sys.service.DisplayService" ref="DisplayService" protocol="dubbo" />
	<dubbo:service interface="com.yrdce.ipo.modules.sys.service.Purchase" ref="Purchase" protocol="dubbo" />
	<dubbo:service interface="com.yrdce.ipo.modules.sys.service.DistributionService" ref="distributionService" protocol="dubbo" />


	<bean id="commodityService" class="com.yrdce.ipo.modules.sys.service.CommodityServiceImpl" />
	<bean id="DisplayService" class="com.yrdce.ipo.modules.sys.service.DisplayServiceImpl" />
	<bean id="Purchase" class="com.yrdce.ipo.modules.sys.service.PurchaseImpl" />
	<bean id="distributionService" class="com.yrdce.ipo.modules.sys.service.DistributionServiceImpl" />
	
<!-- 	当一个接口有多种实现时，可以用group区分。
从 dubbo 2.2.0 开始，每个服务默认都会在本地暴露；在引用服务的时候，默认优先引用本地服务；如果希望引用远程服务可以使用一下配置强制引用远程服务。
读写分离：
method = find*,list*,get*,is* => host = 172.22.3.94,172.22.3.95,172.22.3.96
method != find*,list*,get*,is* => host = 172.22.3.97,172.22.3.98 

-->
	<!-- 使用多个协议暴露服务 -->
    <!-- <dubbo:service id="helloService" interface="com.alibaba.hello.api.HelloService" version="1.0.0" protocol="dubbo,hessian" /> -->
</beans>